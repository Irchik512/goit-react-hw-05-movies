{"version":3,"file":"static/js/472.f96d96a7.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/Section/Section.jsx","components/Section/Section.styled.jsx","moviesApi/moviesApi.js","components/Button/Button.jsx","components/Button/Button.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx"],"sourcesContent":["import PacmanLoader from 'react-spinners/PacmanLoader';\n\nexport default function Loader() {\n  return (\n    <div>\n      <PacmanLoader color=\"grey\" />;\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  text-align: justify;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 15px;\n  }\n`;\n\nexport const Thumb = styled.div`\n  width: 300px;\n  height: 450px;\n  margin: auto;\n  object-fit: contain;\n  & img {\n    width: inherit;\n    height: auto;\n    overflow: hidden;\n  }\n`;\n\nexport const MovieTitle = styled.h1`\n  @media screen and (max-width: 767px) {\n    text-align: center;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport NoImg from 'helpers/ImageNotFound.jpg';\nimport { Wraper, Thumb, MovieTitle } from 'components/MovieInfo';\n\nexport const MovieInfo = ({\n  movie: {\n    title,\n    poster_path,\n    release_date,\n    vote_average,\n    overview,\n    genres = [],\n  },\n}) => {\n  return (\n    <Wraper>\n      <Thumb>\n        <img\n          alt={title}\n          src={\n            poster_path === null\n              ? `${NoImg}`\n              : `https://image.tmdb.org/t/p/w300${poster_path}`\n          }\n        />\n      </Thumb>\n      <div>\n        <MovieTitle>\n          {title} {release_date && `(${release_date})`}\n        </MovieTitle>\n        <p>User score: {vote_average * 10 + '% '}</p>\n        <h2> Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p> {genres.map(genre => genre.name + ' ')} </p>\n      </div>\n    </Wraper>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    release_date: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      .isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ).isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Section, Title, Container } from 'components/Section';\n\nexport const Sections = ({ title, children }) => {\n  return (\n    <Section>\n      <Container>\n        {title && <Title>{title}</Title>}\n        {children}\n      </Container>\n    </Section>\n  );\n};\n\nSections.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 8px 0px;\n  width: 100%;\n  font-family: sans-serif;\n`;\nexport const Container = styled.div`\n  box-sizing: border-box;\n  padding: 0 30px;\n  width: 100%;\n  text-align: center;\n`;\n\nexport const Title = styled.h1`\n  margin-block-end: 0;\n  margin-block-start: 0;\n  margin: 0;\n  font-size: 35px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = `6c934d67464856a6476afafcb7e85695`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  const movies = response.data.results;\n  return movies;\n}\n\n// export async function fetchApiConfig() {\n//   const response = await axios.get(\n//     `https://api.themoviedb.org/3/configuration?api_key=${KEY}`\n//   );\n//   const config = response;\n//   console.log(config);\n// }\n\nexport async function fetchMoviesOnQuery(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const movies = response.data.results;\n\n  return movies;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  const movie = await response.data;\n  return movie;\n}\n\nexport async function movieCasts(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  const cast = await response.data.cast;\n  return cast;\n}\n\nexport async function movieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  const reviews = await response.data.results;\n  return reviews;\n}\n","import PropTypes from 'prop-types';\nimport { GoBackBtn } from 'components/Button';\n\nexport const Button = ({ onClick, children }) => (\n  <GoBackBtn type=\"button\" className=\"button\" onClick={onClick}>\n    {children}\n  </GoBackBtn>\n);\n\nButton.defaultProps = {\n  onClick: () => null,\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const GoBackBtn = styled.button`\n  display: flex;\n  align-items: center;\n  width: fit-content;\n  margin: 4px auto 4px 0;\n  background-color: #fff;\n  border: 1px solid;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useNavigate } from 'react-router-dom';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\nimport { fetchMovieDetails } from 'moviesApi';\nimport Loader from 'components/Loader/Loader';\nimport { Button } from 'components/Button';\nimport { MovieInfo } from 'components/MovieInfo';\nimport { Sections } from 'components/Section';\nimport { AdditionInfo } from 'pages/MovieDetailsPage';\n\nexport const MovieDetailsPage = () => {\n  const [movieData, setMovieData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      setLoading(true);\n      try {\n        const movie = await fetchMovieDetails(movieId);\n        setMovieData(movie);\n      } catch (error) {\n        toast.error(\n          'The resource you requested could not be found. Try again!'\n        );\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      <Sections>\n        <Button onClick={() => navigate(-1)}>\n          <FaArrowLeft /> Go back\n        </Button>\n        {loading && <Loader />}\n      </Sections>\n      {movieData && (\n        <>\n          <Sections>\n            <MovieInfo movie={movieData} />\n          </Sections>\n          <Sections>\n            <AdditionInfo>\n              Additional information:\n              <li>\n                <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n              </li>\n              <li>\n                <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n              </li>\n            </AdditionInfo>\n            <Outlet />\n          </Sections>\n        </>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const AdditionInfo = styled.ul`\n  text-align: start;\n  font-weight: bold;\n  margin: 0;\n`;\n"],"names":["Loader","color","Wraper","styled","Thumb","MovieTitle","MovieInfo","movie","title","poster_path","release_date","vote_average","overview","genres","alt","src","NoImg","map","genre","name","Sections","children","Section","Container","Title","axios","KEY","fetchTrendingMovies","response","movies","data","results","fetchMoviesOnQuery","searchQuery","fetchMovieDetails","movieId","movieCasts","cast","movieReviews","reviews","Button","onClick","GoBackBtn","type","className","defaultProps","MovieDetailsPage","useState","movieData","setMovieData","loading","setLoading","useParams","navigate","useNavigate","useEffect","toast","getMovieDetails","AdditionInfo","to"],"sourceRoot":""}