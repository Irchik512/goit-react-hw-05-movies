{"version":3,"file":"static/js/244.b7a4e0d0.chunk.js","mappings":"sMAEe,SAASA,IACtB,OACE,4BACE,SAAC,IAAD,CAAcC,MAAM,SADtB,S,sMCGSC,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,GAAW,GADb,mBAGyBI,EAAAA,EAAAA,IAAaH,GAHtC,OAGUI,EAHV,OAIIP,EAAWO,GAJf,gDAMIC,EAAAA,GAAAA,MAAY,kDANhB,yBAQIN,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdO,KACC,CAACN,KAGF,gCACGF,IAAW,SAACN,EAAA,EAAD,IACXI,IAAY,IACX,wBACGA,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACC,EAAD,YACE,wBAAKF,KACL,uBAAIC,MAFUF,SAOpB,4E,SCtCKG,E,OAAYC,GAAAA,GAAH,iD,0MCAtBC,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAG,mCAEF,SAAeC,IAAtB,+B,aAAO,O,oBAAA,sGACkBF,IAAAA,IAAA,qCAAwCC,IAD1D,cACCE,EADD,OAECC,EAASD,EAASE,KAAKC,QAFxB,kBAGEF,GAHF,kEAcA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,yFACkBR,IAAAA,IAAA,+BACGC,EADH,4DAC0DO,IAF5E,cACCL,EADD,OAICC,EAASD,EAASE,KAAKC,QAJxB,kBAMEF,GANF,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCtB,GAAjC,yFACkBa,IAAAA,IAAA,gBAAmBb,EAAnB,oBAAsCc,IADxD,cACCE,EADD,gBAEeA,EAASE,KAFxB,cAECK,EAFD,yBAGEA,GAHF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BxB,GAA1B,yFACkBa,IAAAA,IAAA,gBAAmBb,EAAnB,4BAA8Cc,IADhE,cACCE,EADD,gBAEcA,EAASE,KAAKO,KAF5B,cAECA,EAFD,yBAGEA,GAHF,kEAMA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,yFACkBa,IAAAA,IAAA,gBAAmBb,EAAnB,4BAA8Cc,IADhE,cACCE,EADD,gBAEiBA,EAASE,KAAKC,QAF/B,cAECvB,EAFD,yBAGEA,GAHF","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","components/Reviews/Reviews.styled.jsx","moviesApi/moviesApi.js"],"sourcesContent":["import PacmanLoader from 'react-spinners/PacmanLoader';\n\nexport default function Loader() {\n  return (\n    <div>\n      <PacmanLoader color=\"grey\" />;\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { movieReviews } from 'moviesApi';\nimport Loader from 'components/Loader/Loader';\nimport { RevieItem } from 'components/Reviews';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      setLoading(true);\n      try {\n        const result = await movieReviews(movieId);\n        setReviews(result);\n      } catch (error) {\n        toast.error('The resource you requested could not be found.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews !== [] ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <RevieItem key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </RevieItem>\n          ))}\n        </ul>\n      ) : (\n        <p> We don't have any revievws for this movie! </p>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const RevieItem = styled.li`\n  text-align: justify;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = `6c934d67464856a6476afafcb7e85695`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  const movies = response.data.results;\n  return movies;\n}\n\n// export async function fetchApiConfig() {\n//   const response = await axios.get(\n//     `https://api.themoviedb.org/3/configuration?api_key=${KEY}`\n//   );\n//   const config = response;\n//   console.log(config);\n// }\n\nexport async function fetchMoviesOnQuery(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const movies = response.data.results;\n\n  return movies;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  const movie = await response.data;\n  return movie;\n}\n\nexport async function movieCasts(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  const cast = await response.data.cast;\n  return cast;\n}\n\nexport async function movieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  const reviews = await response.data.results;\n  return reviews;\n}\n"],"names":["Loader","color","Reviews","useState","reviews","setReviews","loading","setLoading","movieId","useParams","useEffect","movieReviews","result","toast","getMovieDetails","map","id","author","content","RevieItem","styled","axios","KEY","fetchTrendingMovies","response","movies","data","results","fetchMoviesOnQuery","searchQuery","fetchMovieDetails","movie","movieCasts","cast"],"sourceRoot":""}