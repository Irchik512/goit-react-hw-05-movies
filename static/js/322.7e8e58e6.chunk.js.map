{"version":3,"file":"static/js/322.7e8e58e6.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/FotoCard/FotoCard.jsx","components/Cast/Cast.jsx","components/MovieInfo/MovieInfo.styled.jsx","hooks/hooks.js","moviesApi/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 0;\n`;\n","import PropTypes from 'prop-types';\nimport NoImg from 'helpers/ImageNotFound.jpg';\nimport { Thumb } from 'components/MovieInfo/MovieInfo.styled';\n\nexport const FotoCard = ({ name, src, character }) => {\n  return (\n    <li>\n      <Thumb>\n        <img\n          alt={name}\n          src={\n            src === null ? `${NoImg}` : `https://image.tmdb.org/t/p/w300${src}`\n          }\n        />\n      </Thumb>\n      <div>\n        <h3>{name}</h3>\n        <p>Character: {character}</p>\n      </div>\n    </li>\n  );\n};\n\nFotoCard.propTypes = {\n  src: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n","import { CastList } from 'components/Cast';\nimport { FotoCard } from 'components/FotoCard';\nimport { useFetchMovieInfo } from 'hooks';\nimport { movieCasts } from 'moviesApi';\n\nconst Cast = () => {\n  const { data } = useFetchMovieInfo(movieCasts);\n  return (\n    <>\n      {data && (\n        <CastList>\n          {data.map(({ cast_id, profile_path, name, character }) => (\n            <FotoCard\n              key={cast_id}\n              name={name}\n              src={profile_path}\n              character={character}\n            />\n          ))}\n        </CastList>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  text-align: justify;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 15px;\n  }\n`;\n\nexport const Thumb = styled.div`\n  width: 300px;\n  height: 450px;\n  margin: auto;\n  object-fit: contain;\n  & img {\n    width: inherit;\n    height: auto;\n    overflow: hidden;\n  }\n`;\n\nexport const MovieTitle = styled.h1`\n  @media screen and (max-width: 767px) {\n    text-align: center;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchTrendingMovies, fetchMoviesOnQuery } from 'moviesApi';\nimport { toast } from 'react-toastify';\n\nexport const useFetchMovies = () => {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    async function getTrendingMovies() {\n      try {\n        const data = await fetchTrendingMovies(1);\n        setItems(data);\n      } catch (error) {\n        toast.error('The resource could not be found.');\n      }\n    }\n    getTrendingMovies();\n  }, []);\n  return { items };\n};\n\nexport const useFetchByQuery = query => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const searchQuery = query.get('query');\n    if (!searchQuery) return;\n\n    async function getMovies() {\n      try {\n        const data = await fetchMoviesOnQuery(searchQuery);\n        setData(data);\n      } catch (error) {\n        toast.error('The resource you requested could not be found.');\n      }\n    }\n    getMovies();\n  }, [query]);\n  return { data };\n};\n\nexport const useFetchMovieInfo = dataAPI => {\n  const [data, setData] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const movie = await dataAPI(movieId);\n        if (movie.length === 0) {\n          return console.error();\n        }\n        setData(movie);\n      } catch (error) {\n        toast.error('The resource you requested not exist yet.');\n      }\n    }\n    getMovieDetails();\n  }, [dataAPI, movieId]);\n  return { data, movieId };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = `6c934d67464856a6476afafcb7e85695`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  const movies = response.data.results;\n  return movies;\n}\n\nexport async function fetchMoviesOnQuery(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const movies = response.data.results;\n\n  return movies;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  const movie = await response.data;\n  return movie;\n}\n\nexport async function movieCasts(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  const cast = await response.data.cast;\n  return cast;\n}\n\nexport async function movieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  const reviews = await response.data.results;\n  return reviews;\n}\n"],"names":["CastList","styled","FotoCard","name","src","character","alt","NoImg","data","useFetchMovieInfo","movieCasts","map","cast_id","profile_path","Wraper","Thumb","MovieTitle","useFetchMovies","useState","items","setItems","useEffect","fetchTrendingMovies","toast","getTrendingMovies","useFetchByQuery","query","setData","searchQuery","get","fetchMoviesOnQuery","getMovies","dataAPI","movieId","useParams","movie","length","console","error","getMovieDetails","axios","KEY","response","movies","results","fetchMovieDetails","cast","movieReviews","reviews"],"sourceRoot":""}