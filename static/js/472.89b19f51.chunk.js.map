{"version":3,"file":"static/js/472.89b19f51.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/Section/Section.jsx","components/Section/Section.styled.jsx","hooks/hooks.js","moviesApi/moviesApi.js","components/Button/Button.jsx","components/Button/Button.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  text-align: justify;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 15px;\n  }\n`;\n\nexport const Thumb = styled.div`\n  width: 300px;\n  height: 450px;\n  margin: auto;\n  object-fit: contain;\n  & img {\n    width: inherit;\n    height: auto;\n    overflow: hidden;\n  }\n`;\n\nexport const MovieTitle = styled.h1`\n  @media screen and (max-width: 767px) {\n    text-align: center;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport NoImg from 'helpers/ImageNotFound.jpg';\nimport { Wraper, Thumb, MovieTitle } from 'components/MovieInfo';\n\nexport const MovieInfo = ({\n  movie: {\n    title,\n    poster_path,\n    release_date,\n    vote_average,\n    overview,\n    genres = [],\n  },\n}) => {\n  return (\n    <Wraper>\n      <Thumb>\n        <img\n          alt={title}\n          src={\n            poster_path === null\n              ? `${NoImg}`\n              : `https://image.tmdb.org/t/p/w300${poster_path}`\n          }\n        />\n      </Thumb>\n      <div>\n        <MovieTitle>\n          {title} {release_date && `(${release_date})`}\n        </MovieTitle>\n        <p>User score: {(vote_average * 10).toFixed(2) + '% '}</p>\n        <h2> Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p> {genres.map(genre => genre.name + ' ')} </p>\n      </div>\n    </Wraper>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      .isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ).isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Section, Title, Container } from 'components/Section';\n\nexport const Sections = ({ title, children }) => {\n  return (\n    <Section>\n      <Container>\n        {title && <Title>{title}</Title>}\n        {children}\n      </Container>\n    </Section>\n  );\n};\n\nSections.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 8px 0px;\n  width: 100%;\n  font-family: sans-serif;\n`;\nexport const Container = styled.div`\n  box-sizing: border-box;\n  padding: 0 30px;\n  width: 100%;\n  text-align: center;\n`;\n\nexport const Title = styled.h1`\n  margin-block-end: 0;\n  margin-block-start: 0;\n  margin: 0;\n  font-size: 35px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchTrendingMovies, fetchMoviesOnQuery } from 'moviesApi';\nimport { toast } from 'react-toastify';\n\nexport const useFetchMovies = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getTrendingMovies() {\n      setLoading(true);\n      try {\n        const data = await fetchTrendingMovies(1);\n        setItems(data);\n      } catch (error) {\n        toast.error('The resource could not be found.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getTrendingMovies();\n  }, []);\n  return { items, loading };\n};\n\nexport const useFetchByQuery = query => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const searchQuery = query.get('query');\n    if (!searchQuery) return;\n\n    async function getMovies() {\n      setLoading(true);\n      try {\n        const data = await fetchMoviesOnQuery(searchQuery);\n        setData(data);\n      } catch (error) {\n        toast.error('The resource you requested could not be found.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovies();\n  }, [query]);\n  return { loading, data };\n};\n\nexport const useFetchMovieInfo = dataAPI => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      setLoading(true);\n      try {\n        const movie = await dataAPI(movieId);\n        if (movie.length === 0) {\n          return console.error();\n        }\n        setData(movie);\n      } catch (error) {\n        toast.error('The resource you requested not exist yet.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovieDetails();\n  }, [dataAPI, movieId]);\n  return { loading, data, movieId };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = `6c934d67464856a6476afafcb7e85695`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  const movies = response.data.results;\n  return movies;\n}\n\nexport async function fetchMoviesOnQuery(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const movies = response.data.results;\n\n  return movies;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  const movie = await response.data;\n  return movie;\n}\n\nexport async function movieCasts(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  const cast = await response.data.cast;\n  return cast;\n}\n\nexport async function movieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  const reviews = await response.data.results;\n  return reviews;\n}\n","import PropTypes from 'prop-types';\nimport { GoBackBtn } from 'components/Button';\n\nexport const Button = ({ onClick, children }) => (\n  <GoBackBtn type=\"button\" className=\"button\" onClick={onClick}>\n    {children}\n  </GoBackBtn>\n);\n\nButton.defaultProps = {\n  onClick: () => null,\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const GoBackBtn = styled.button`\n  display: flex;\n  align-items: center;\n  width: fit-content;\n  margin: 4px auto 4px 0;\n  background-color: #fff;\n  border: 1px solid;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n","import { Link, Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { useFetchMovieInfo } from 'hooks';\nimport { fetchMovieDetails } from 'moviesApi';\nimport Loader from 'components/Loader/Loader';\nimport { Button } from 'components/Button';\nimport { MovieInfo } from 'components/MovieInfo';\nimport { Sections } from 'components/Section';\nimport { AdditionInfo } from 'pages/MovieDetailsPage';\n\nexport const MovieDetailsPage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  // const backLinkLocationRef = useRef(location.state?.from ?? '/movies')\n  const { data, loading, movieId } = useFetchMovieInfo(fetchMovieDetails);\n  console.log(data);\n  return (\n    <>\n      <Sections>\n        <Button onClick={() => navigate(location?.state?.from ?? '/')}>\n          <FaArrowLeft /> Go back\n        </Button>\n        {loading && <Loader />}\n      </Sections>\n      {data && (\n        <>\n          <Sections>\n            <MovieInfo movie={data} />\n          </Sections>\n          <Sections>\n            <AdditionInfo>\n              Additional information:\n              <li>\n                <Link\n                  to={`/movies/${movieId}/cast`}\n                  state={{ from: location?.state?.from ?? '/' }}\n                >\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to={`/movies/${movieId}/reviews`}\n                  state={{ from: location?.state?.from ?? '/' }}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </AdditionInfo>\n            <Outlet />\n          </Sections>\n        </>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const AdditionInfo = styled.ul`\n  text-align: start;\n  font-weight: bold;\n  margin: 0;\n`;\n"],"names":["Wraper","styled","Thumb","MovieTitle","MovieInfo","movie","title","poster_path","release_date","vote_average","overview","genres","alt","src","NoImg","toFixed","map","genre","name","Sections","children","Section","Container","Title","useFetchByQuery","query","useState","data","setData","loading","setLoading","useEffect","searchQuery","get","fetchMoviesOnQuery","toast","getMovies","useFetchMovieInfo","dataAPI","movieId","useParams","length","console","error","getMovieDetails","axios","KEY","response","movies","results","fetchMovieDetails","movieCasts","cast","movieReviews","reviews","Button","onClick","GoBackBtn","type","className","defaultProps","MovieDetailsPage","navigate","useNavigate","location","useLocation","log","state","from","Loader","AdditionInfo","to"],"sourceRoot":""}