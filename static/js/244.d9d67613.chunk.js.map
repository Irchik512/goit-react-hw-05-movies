{"version":3,"file":"static/js/244.d9d67613.chunk.js","mappings":"sMAEe,SAASA,IACtB,OACE,0BACE,SAAC,IAAD,CAAcC,MAAM,a,6ICAbC,EAAU,WACrB,OAA0BC,EAAAA,EAAAA,IAAaC,EAAAA,IAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAEd,OACE,gCACGA,IAAW,SAACN,EAAA,EAAD,IACXK,IACC,wBACGA,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACR,UAACC,EAAD,YACE,wBAAKF,KACL,uBAAIC,MAFUF,Y,SCZfG,E,OAAYC,GAAAA,GAAH,iD,uLCGTC,EAAiB,WAC5B,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOR,EAAP,KAAgBW,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAW,GADb,mBAGuBE,EAAAA,EAAAA,IAAoB,GAH3C,OAGUd,EAHV,OAIIW,EAASX,GAJb,gDAMIe,EAAAA,GAAAA,MAAY,oCANhB,yBAQIH,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdI,KACC,IACI,CAAEN,MAAAA,EAAOT,QAAAA,IAGLH,EAAe,SAAAmB,GAC1B,OAAwBR,EAAAA,EAAAA,UAAS,MAAjC,eAAOT,EAAP,KAAakB,EAAb,KACA,GAA8BT,EAAAA,EAAAA,WAAS,GAAvC,eAAOR,EAAP,KAAgBW,EAAhB,KACQO,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAN,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAW,GADb,kBAGwBK,EAAQE,GAHhC,OAGUE,EAHV,OAIIH,EAAQG,GAJZ,gDAMIN,EAAAA,GAAAA,MAAY,kDANhB,yBAQIH,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdU,KACC,CAACL,EAASE,IACN,CAAElB,QAAAA,EAASD,KAAAA,EAAMmB,QAAAA,IAGbI,EAAkB,SAAAC,GAC7B,OAAwBf,EAAAA,EAAAA,UAAS,MAAjC,eAAOT,EAAP,KAAakB,EAAb,KACA,GAA8BT,EAAAA,EAAAA,WAAS,GAAvC,eAAOR,EAAP,KAAgBW,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMY,EAAcD,EAAME,IAAI,SADhB,wCAId,2FACEd,GAAW,GADb,mBAGuBe,EAAAA,EAAAA,IAAmBF,GAH1C,OAGUzB,EAHV,OAIIkB,EAAQlB,GAJZ,gDAMIe,EAAAA,GAAAA,MAAY,kDANhB,yBAQIH,GAAW,GARf,6EAJc,sBAETa,GAFS,mCAedG,KACC,CAACJ,IACG,CAAEvB,QAAAA,EAASD,KAAAA,K,0MCnEpB6B,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAG,mCAEF,SAAehB,IAAtB,4CAAO,OAAP,oBAAO,sGACkBe,IAAAA,IAAA,qCAAwCC,IAD1D,cACCC,EADD,OAECC,EAASD,EAAS/B,KAAKiC,QAFxB,kBAGED,GAHF,kEAMA,SAAeL,EAAtB,+CAAO,OAAP,oBAAO,WAAkCF,GAAlC,yFACkBI,IAAAA,IAAA,+BACGC,EADH,4DAC0DL,IAF5E,cACCM,EADD,OAICC,EAASD,EAAS/B,KAAKiC,QAJxB,kBAMED,GANF,kEASA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCf,GAAjC,yFACkBU,IAAAA,IAAA,gBAAmBV,EAAnB,oBAAsCW,IADxD,cACCC,EADD,gBAEeA,EAAS/B,KAFxB,cAECqB,EAFD,yBAGEA,GAHF,kEAMA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA0BhB,GAA1B,yFACkBU,IAAAA,IAAA,gBAAmBV,EAAnB,4BAA8CW,IADhE,cACCC,EADD,gBAEcA,EAAS/B,KAAKoC,KAF5B,cAECA,EAFD,yBAGEA,GAHF,kEAMA,SAAerC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BoB,GAA5B,yFACkBU,IAAAA,IAAA,gBAAmBV,EAAnB,4BAA8CW,IADhE,cACCC,EADD,gBAEiBA,EAAS/B,KAAKiC,QAF/B,cAECI,EAFD,yBAGEA,GAHF","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","components/Reviews/Reviews.styled.jsx","hooks/hooks.js","moviesApi/moviesApi.js"],"sourcesContent":["import PacmanLoader from 'react-spinners/PacmanLoader';\n\nexport default function Loader() {\n  return (\n    <div>\n      <PacmanLoader color=\"grey\" />\n    </div>\n  );\n}\n","import { movieReviews } from 'moviesApi';\nimport Loader from 'components/Loader/Loader';\nimport { RevieItem } from 'components/Reviews';\nimport { useFetchData } from 'hooks';\n\nexport const Reviews = () => {\n  const { data, loading } = useFetchData(movieReviews);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {data && (\n        <ul>\n          {data.map(({ id, author, content }) => (\n            <RevieItem key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </RevieItem>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const RevieItem = styled.li`\n  text-align: justify;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchTrendingMovies, fetchMoviesOnQuery } from 'moviesApi';\nimport { toast } from 'react-toastify';\n\nexport const useFetchMovies = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getTrendingMovies() {\n      setLoading(true);\n      try {\n        const data = await fetchTrendingMovies(1);\n        setItems(data);\n      } catch (error) {\n        toast.error('The resource could not be found.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getTrendingMovies();\n  }, []);\n  return { items, loading };\n};\n\nexport const useFetchData = dataAPI => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      setLoading(true);\n      try {\n        const movie = await dataAPI(movieId);\n        setData(movie);\n      } catch (error) {\n        toast.error('The resource you requested could not be found.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovieDetails();\n  }, [dataAPI, movieId]);\n  return { loading, data, movieId };\n};\n\nexport const useFetchByQuery = query => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const searchQuery = query.get('query');\n    if (!searchQuery) return;\n\n    async function getMovies() {\n      setLoading(true);\n      try {\n        const data = await fetchMoviesOnQuery(searchQuery);\n        setData(data);\n      } catch (error) {\n        toast.error('The resource you requested could not be found.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovies();\n  }, [query]);\n  return { loading, data };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = `6c934d67464856a6476afafcb7e85695`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  const movies = response.data.results;\n  return movies;\n}\n\nexport async function fetchMoviesOnQuery(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const movies = response.data.results;\n\n  return movies;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  const movie = await response.data;\n  return movie;\n}\n\nexport async function movieCasts(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  const cast = await response.data.cast;\n  return cast;\n}\n\nexport async function movieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  const reviews = await response.data.results;\n  return reviews;\n}\n"],"names":["Loader","color","Reviews","useFetchData","movieReviews","data","loading","map","id","author","content","RevieItem","styled","useFetchMovies","useState","items","setItems","setLoading","useEffect","fetchTrendingMovies","toast","getTrendingMovies","dataAPI","setData","movieId","useParams","movie","getMovieDetails","useFetchByQuery","query","searchQuery","get","fetchMoviesOnQuery","getMovies","axios","KEY","response","movies","results","fetchMovieDetails","movieCasts","cast","reviews"],"sourceRoot":""}