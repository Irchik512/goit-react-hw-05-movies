{"version":3,"file":"static/js/330.4a08ece4.chunk.js","mappings":"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","sources":["components/GalleryItem/GalleryItem.jsx","components/GalleryItem/GalleryItem.styled.jsx","components/Gallery/Gallery.jsx","components/Gallery/Gallery.styled.jsx","components/Loader/Loader.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/Section/Section.jsx","components/Section/Section.styled.jsx","moviesApi/moviesApi.js","pages/HomePage/HomePage.jsx","hooks/hooks.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport NoImg from 'helpers/ImageNotFound.jpg';\nimport { Thumb } from 'components/MovieInfo';\nimport {\n  MovieItem,\n  ItemLink,\n  ItemImage,\n  ItemTitle,\n} from 'components/GalleryItem';\n\nexport function GalleryItem({ alt, src, title, id }) {\n  return (\n    <MovieItem>\n      <ItemLink to={`/movies/${id}`}>\n        <Thumb>\n          <ItemImage\n            src={\n              src !== null\n                ? `https://image.tmdb.org/t/p/w300${src}`\n                : `${NoImg}`\n            }\n            alt={alt}\n          />\n        </Thumb>\n        <ItemTitle>{title}</ItemTitle>\n      </ItemLink>\n    </MovieItem>\n  );\n}\n\nGalleryItem.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  max-width: 300px;\n  overflow: hidden;\n`;\nexport const ItemLink = styled(Link)`\n  width: 100%;\n  height: inherit;\n  align-items: center;\n  text-decoration: none;\n  color: black;\n`;\nexport const ItemImage = styled.img`\n  display: block;\n  object-fit: contain;\n`;\nexport const ItemTitle = styled.p`\n  margin: 10px 0 0;\n  text-wrap: wrap;\n`;\n","import PropTypes from 'prop-types';\nimport { GalleryItem } from 'components/GalleryItem';\nimport { MoviesGallery } from 'components/Gallery';\n\nexport function Gallery({ movies, onClick }) {\n  return (\n    <MoviesGallery className=\"Gallery\" onClick={onClick}>\n      {movies.map(movie => (\n        <GalleryItem\n          key={movie.id}\n          alt={movie.original_title}\n          src={movie.poster_path}\n          title={movie.title}\n          id={movie.id}\n        />\n      ))}\n    </MoviesGallery>\n  );\n}\n\nGallery.defaultProps = {\n  onClick: () => null,\n};\n\nGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n  onClick: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const MoviesGallery = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  padding: 0;\n  margin: 10px 0 20 0;\n`;\n","import PacmanLoader from 'react-spinners/PacmanLoader';\n\nexport default function Loader() {\n  return (\n    <div>\n      <PacmanLoader color=\"grey\" />;\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  text-align: justify;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 15px;\n  }\n`;\n\nexport const Thumb = styled.div`\n  width: 300px;\n  height: 450px;\n  margin: auto;\n  object-fit: contain;\n  & img {\n    width: inherit;\n    height: auto;\n    overflow: hidden;\n  }\n`;\n\nexport const MovieTitle = styled.h1`\n  @media screen and (max-width: 767px) {\n    text-align: center;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport NoImg from 'helpers/ImageNotFound.jpg';\nimport { Wraper, Thumb, MovieTitle } from 'components/MovieInfo';\n\nexport const MovieInfo = ({\n  movie: {\n    title,\n    poster_path,\n    release_date,\n    vote_average,\n    overview,\n    genres = [],\n  },\n}) => {\n  return (\n    <Wraper>\n      <Thumb>\n        <img\n          alt={title}\n          src={\n            poster_path === null\n              ? `${NoImg}`\n              : `https://image.tmdb.org/t/p/w300${poster_path}`\n          }\n        />\n      </Thumb>\n      <div>\n        <MovieTitle>\n          {title} {release_date && `(${release_date})`}\n        </MovieTitle>\n        <p>User score: {vote_average * 10 + '% '}</p>\n        <h2> Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p> {genres.map(genre => genre.name + ' ')} </p>\n      </div>\n    </Wraper>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    release_date: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      .isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ).isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Section, Title, Container } from 'components/Section';\n\nexport const Sections = ({ title, children }) => {\n  return (\n    <Section>\n      <Container>\n        {title && <Title>{title}</Title>}\n        {children}\n      </Container>\n    </Section>\n  );\n};\n\nSections.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 8px 0px;\n  width: 100%;\n  font-family: sans-serif;\n`;\nexport const Container = styled.div`\n  box-sizing: border-box;\n  padding: 0 30px;\n  width: 100%;\n  text-align: center;\n`;\n\nexport const Title = styled.h1`\n  margin-block-end: 0;\n  margin-block-start: 0;\n  margin: 0;\n  font-size: 35px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = `6c934d67464856a6476afafcb7e85695`;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  const movies = response.data.results;\n  return movies;\n}\n\n// export async function fetchApiConfig() {\n//   const response = await axios.get(\n//     `https://api.themoviedb.org/3/configuration?api_key=${KEY}`\n//   );\n//   const config = response;\n//   console.log(config);\n// }\n\nexport async function fetchMoviesOnQuery(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const movies = response.data.results;\n\n  return movies;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  const movie = await response.data;\n  return movie;\n}\n\nexport async function movieCasts(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  const cast = await response.data.cast;\n  return cast;\n}\n\nexport async function movieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  const reviews = await response.data.results;\n  return reviews;\n}\n","import Loader from 'components/Loader/Loader';\nimport { Gallery } from 'components/Gallery';\nimport { Sections } from 'components/Section';\nimport { useFetchMovies } from 'hooks';\n\nexport const HomePage = () => {\n  const { items, loading } = useFetchMovies();\n\n  return (\n    <Sections title={'Trending today'}>\n      {loading && <Loader />}\n      <Gallery movies={items} />\n    </Sections>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'moviesApi';\n\nexport const useFetchMovies = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getTrendingMovies() {\n      setLoading(true);\n      try {\n        const movies = await fetchTrendingMovies(1);\n        setItems(movies);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getTrendingMovies();\n  }, []);\n  return { items, loading };\n};\n"],"names":["GalleryItem","alt","src","title","id","MovieItem","ItemLink","to","ItemImage","NoImg","ItemTitle","styled","Link","Gallery","movies","onClick","MoviesGallery","className","map","movie","original_title","poster_path","defaultProps","Loader","color","Wraper","Thumb","MovieTitle","MovieInfo","release_date","vote_average","overview","genres","genre","name","Sections","children","Section","Container","Title","axios","KEY","fetchTrendingMovies","response","data","results","fetchMoviesOnQuery","searchQuery","fetchMovieDetails","movieId","movieCasts","cast","movieReviews","reviews","HomePage","useState","items","setItems","loading","setLoading","useEffect","console","log","message","getTrendingMovies","useFetchMovies"],"sourceRoot":""}